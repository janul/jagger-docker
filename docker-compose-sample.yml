version: '3.2'
services:
  db:
    deploy:
      placement:
        constraints:
        - node.labels.jaggerdb == true
      replicas: 1
    environment:
      MYSQL_DATABASE: rr3
      MYSQL_PASSWORD: rr312
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: rr3
    image: mariadb
    restart: always
    volumes:
    - db_data:/var/lib/mysql:rw
  jagger:
    depends_on:
    - db
    - rabbitmq
    environment:
      DB_HOST: db
      DB_PASSWORD: rr312
      DB_USER: rr3
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PASS: password
      RABBITMQ_USER: admin
      RABBITMQ_VHOST: /
      VIRTUAL_HOST: jagger.example.com
    image: janul/jagger:test-1.4
    links:
    - db
    - rabbitmq
    - redis
    - memcache
    ports:
    - published: 443
      target: 443
    secrets:
    - source: metasigner-cert
    - source: metasigner-key
    - source: metasigner-pass
    volumes:
    - jagger_filescache:/opt/Jagger/application/cache:rw
    - jagger_config:/opt/Jagger/application/config:rw
    - jagger_logs:/opt/Jagger/application/logs:rw
    - jagger_signedmetadata:/opt/Jagger/signedmetadata:rw
  rabbitmq:
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        delay: 10s
        parallelism: 1
    environment:
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_ERLANG_COOKIE: foobar
      RABBITMQ_USE_LONGNAME: "true"
    image: rabbitmq:3.7.0
  redis:
    deploy:
      replicas: 1
    image: redis
  memcache:
    deploy:
      replicas: 1
    image: memcached
volumes:
  db_data: {}
  jagger_config: {}
  jagger_filescache: {}
  jagger_logs: {}
  jagger_signedmetadata: {}
secrets:
  metasigner-cert:
    external: true
  metasigner-key:
    external: true
  metasigner-pass:
    external: true
